name: Builds
on:
  release:
    types: [created]
jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: alpine:latest
    strategy:
      fail-fast: false
      matrix:
        ghc: ['8.10.3']
    steps:
      - name: Setup
        run: |
          # from https://github.com/utdemir/ghc-musl/blob/master/Dockerfile
          apk update
          apk add \
            gcc g++ bash git make xz tar binutils-gold \
            perl curl file automake autoconf dpkg \
            fakeroot findutils shadow
          apk add \
            gmp-dev ncurses-dev \
            libffi libffi-dev \
            xz xz-dev ncurses-static \
            bzip2 bzip2-dev bzip2-static \
            zlib zlib-dev zlib-static \
            git
          curl --fail -o /bin/ghcup https://downloads.haskell.org/ghcup/$GHCUP/x86_64-linux-ghcup-$GHCUP
          chmod +x /bin/ghcup
          ghcup install ghc --set $GHC
          ghcup install cabal --set $CABAL
          echo "$GHCUP_INSTALL_BASE_PREFIX/.ghcup/bin" >> $GITHUB_PATH
        env:
          GHCUP_INSTALL_BASE_PREFIX: /usr/local
          GHCUP: '0.1.12'
          GHC: ${{ matrix.ghc }}
          CABAL: '3.2.0.0'
      - uses: actions/checkout@v2

      - name: Build
        run: |
          cabal update
          cabal build exe:haskell-language-server -O2 --enable-executable-static --ghc-options=-split-sections
          mkdir -p output
          cp $(find dist-newstyle -name haskell-language-server -type f) output/

      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: output/haskell-language-server
          asset_name: haskell-language-server-${{ runner.os }}-${{ matrix.ghc }}
          asset_content_type: application/octet-stream
